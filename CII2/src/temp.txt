switch (step)
            {
                case 0:
                    ACLMessage cfp = new ACLMessage(ACLMessage.CFP);
                    cfp.addReceiver(questionses[currentQAgent]);
                    if (startNew)
                    {
                        cfp.setContent("To default");
                        startNew = false;
                    }
                    else
                    {
                        cfp.setContent("Get rand question");
                        step = 1;
                    }
                    cfp.setConversationId("drafting-tickets");
                    cfp.setReplyWith("cfp" + System.currentTimeMillis());
                    myAgent.send(cfp);
                    mt = MessageTemplate.and(MessageTemplate.MatchConversationId("drafting-tickets"),
                                             MessageTemplate.MatchInReplyTo(cfp.getReplyWith()));
                    break;
                case 1:
                    ACLMessage reply = myAgent.receive(mt);
                    if (reply != null)
                    {
                        if (reply.getPerformative() == ACLMessage.PROPOSE)
                        {
                            try
                            {
                                currentQuestion = (Question) reply.getContentObject();
                            }
                            catch (UnreadableException e)
                            {
                                e.printStackTrace();
                                block();
                            }
                            cfp = new ACLMessage(ACLMessage.CFP);
                            for (AID q : questionses)
                            {
                                cfp.addReceiver(q);
                            }
                            cfp.setContent("Get question by complex;" +
                                           (totalCompl - currentQuestion.getComplex()) +
                                           ";" + currentQuestion.getNameSubj());
                            cfp.setConversationId("drafting-tickets");
                            cfp.setReplyWith("cfp" + System.currentTimeMillis());
                            myAgent.send(cfp);
                            mt = MessageTemplate.and(MessageTemplate.MatchConversationId("drafting-tickets"),
                                                     MessageTemplate.MatchInReplyTo(cfp.getReplyWith()));
                            step = 2;
                            repliesCnt = 0;
                        }
                        else
                        {
                            if (currentQAgent >= questionses.length - 1)
                            {
                                done = true;
                                return;
                            }
                            currentQAgent++;
                            step = 0;
                        }
                    }
                    else
                    {
                        block();
                    }
                    break;
                case 2:
                    reply = myAgent.receive(mt);
                    if (reply != null)
                    {
                        if (reply.getPerformative() == ACLMessage.PROPOSE)
                        {
                            try
                            {
                                Question temp = (Question) reply.getContentObject();
                                ticketsData.add(new Ticket(currentQuestion, temp));
                                System.out.println("\n[TicketAdd]: "+ticketsData.get(ticketsData.size()-1));
                                ticketsFound = true;
                                currentQuestion = null;
                                toDelete = reply.getSender();
                            }
                            catch (UnreadableException e)
                            {
                                e.printStackTrace();
                                block();
                            }
                            step = 3;
                        }
                        else
                        {
                            repliesCnt++;
                            if (repliesCnt == questionses.length)
                            {
                                step = 0;
                            }
                        }
                    }
                    else
                    {
                        block();
                    }
                    break;
                case 3:
                    cfp = new ACLMessage(ACLMessage.CFP);
                    cfp.addReceiver(questionses[currentQAgent]);
                    cfp.setContent("Delete rand send");
                    cfp.setConversationId("drafting-tickets");
                    cfp.setReplyWith("cfp" + System.currentTimeMillis());
                    myAgent.send(cfp);

                    cfp = new ACLMessage(ACLMessage.CFP);
                    cfp.addReceiver(toDelete);
                    cfp.setContent("Delete last send");
                    cfp.setConversationId("drafting-tickets");
                    cfp.setReplyWith("cfp" + System.currentTimeMillis());
                    myAgent.send(cfp);
                    step = 0;
                    break;